//
   Created by yangjie on 2017/12/28.

D:\Program Files (x86)\JetBrains\WebStorm 11.0.3\plugins\JavaScriptLanguage\lib\JavaScriptLanguage\com\intellij\lang\javascript\index\predefined\

产品二维码:  	http://192.168.17.38:8088/
公共资料：  	\\192.168.18.14
PC端OA测试地址: http://28f.bujidele.com:34180/login.aspx ||2288
OA正式地址：	http://oa.tdxueyuan.com/V2/Index.aspx
禅道地址：	http://192.168.18.15/index.php?m=user&f=login&referer=L2luZGV4LnBocA==

G:\program\public datum\产品\UI\APP_UI\PSD\000 UI效果图\2.0\常用流程\行政流程\固定资产\资产分配

http://28f.bujidele.com:34180/tdoa_web/OA-H5/html/expense-detail.html
28f.bujidele.com:19852

password: tuandai123456,  Tuandai123456

http://localhost:63342/OA-H5/html/leave-detail.html?ID=126173

test server打包测试地址：  C:\web\tdoa_web\OA-H5

oa h5技术方案：  SUI VUE GRUNT

sui 样式注意点：
button:
	button-block
bar:
	bar-header-secondary、 bar-footer-secondary
content:
	content-block、
	content-block-title（语义化）、list-block（语义化）
item:
	item-content(语义化）、item-input（语义化）
	item-media、 item-inner

row、col

2.5+2.5
theme

icon库
 form
   icon-form-name, icon-form-email...

input：
  label-switch， checkbox使用方式

搜索栏：
  ct: searchbar、 search-input


侧栏
  用 .page 容器把 .bar 和 .content 包裹起来
  	panel-overlay


zepto注意点：
携带cookie, withGredentials , 在xhr.open 之后设置，兼容webview等



优化：
moment.js  非必须
org-tree   每个html文件都需要？？
   org-tree 不是所有的都需要
vue升级到2.2.0


usermove-apply.js
 org-tree 中 setSelectedUsers bug 及 显示上面的小问题
usermove-detail.js 中 空指针异常问题


pc:
  pc-tree.js 上右点击 bug


功能分类：
 oa.js  OAajax 与  部分弹出组件

baseApply    bindEvent::$('.page').validate
zepteValid   options.succFunc.call
baseApply    submitInfo::getData
XXXApply     getData

兼容: ios日期格式兼容

webpack查询：
   https://egghead.io/courses/using-webpack-for-production-javascript-applications
使用firebase构建
  https://segmentfault.com/a/1190000007805111

webpack attention:
 loader: 'style-loader!css-loader?modules' ?modules可以使用 :global() 伪类函数
 require('bundle-loader!./a.js') <--> require.ensure










review：--------------------------
templete值编译，模板编译,需加编译器，*.vue文件内部模板在构建时预编译成js；
纯渲染函数，则无需加编译器；

webpack + vue-loader运行时构建，完全兼容CSP

"渐进式" 框架，可增量开发；当与 单文件组件 和 vue生态系统支持库 结合，可为任何复杂程序提供驱动


bind:title??

vm.dataKey等价vm.$data.dataKey:
vm.$watch('dataKey', function(newV, oldV){});
vm.$options.propKey： 用于当前 Vue 实例的初始化选项
vm.computerKey



子组件通过新定义props（属性名集）接口实现与父单元解耦

vue组件相对草案中web组件规范：跨组件数据流，自定义事件通信及构建工具集成
predefine: web组件规范


vue的双向绑定：
 当一个vue实例被创建时，它向vue的响应系统（vue工作框架）中加入了其 data 对象中能找到的所有属性。
 当这些属性值发生改变时，视图会产生“响应”，以匹配新的值.


v-model
v-once
v-html: 绑定数据解析为html代码，非普通文本
{{ 模板表达式中只能访问js内置的全局对象 }}


指令方式： （v-direct）:（prop||eventName||。。。。）.（modifiers）
指令简写：  v-bind: --> :  ； v-on -->  @


一个函数 定义为vm的一个方法 与 定义为一个计算属性 的比较
vm中 计算属性 与 自定义侦听器 的对比：数据变化时执行 异步 或 开销很大 的操作宜用监听器


v-bind 处理class、style的增强：传递一个对象、数组；
v-bind:style 会自动添加浏览器引擎前缀，以兼容


当条件渲染时，用key管理可复用元素（加key，在不同元素切换）；
2.2.0版本中，在组件中使用v-for， key必须出现

Vue不能检测以下变动的数组：
 vm.items[index] = newValue;  --> Vue.set(example1.items, index, newValue)
 vm.items.length = newLength; --> example1.items.splice(newLength)
Vue不能检测vue data对象的添加删除

同一节点，v-for优先级高于v-if

v-on:evtType="listenerFn($event)", $event可访问原始DOM事件
绑定事件监听函数有无括号的写法

especial：
  <input v-model.lazy='msg'> 输入input触发变为change触发

字符串模板：
1， Vue只有在浏览器解析、规范化模板之后才能获取其内容；
    而当浏览器解析特殊元素如table中自定义tr等等，会出错导致错误渲染；
    变通方案 <tr is="my-tr"></tr>, 或者 字符串模板<script type="text/x-template"> || .vue 等
2， 组件命名camelCase 需要转换 kebab-case, 字符串模板中则没有限制


动态Prop
可用不带任何参数的 v-bind，将一个对象所有属性作为prop进行传递
自定义组件的prop，需要v-bind进行绑定传值

.native 给组件绑定原生事件
Vue为单向数据流：
  但 .sync子组件与父组件的双向数据流绑定；v-model的实质，及在表单输入和应用状态双向绑定
  自定义组件v-model生效：1，接受一个 value prop    2，在有新的值时触发 input 事件并将新值作为参数

**父组件模板的内容在父组件作用域内编译；子组件模板的内容在子组件作用域内编译
具名插槽；
作用域插槽：2.5.0+ slot-scope可用于任意组件或元素中；2.5.0- 只能用于<template>中

Vue组件api：prop, 事件， 插槽

:is 特性，vm在不同的组件中切换时改变


组件混合对象时：
 1，同名钩子函数合并，混合对象优先
 2，methods, components等时，使用组件键值对
 3，全局混合，影响所有之后的vm


组件逻辑的复用；指令--普通Dom底层操作的复用

指令的简写，仅在bind, update钩子中触发更改


** createElement: 创建VNode， 参数类型及样式

过滤器filter实用点：1{{}}中  2v-bind中


Vue相应原理：
 1，遍历所有属性，将之通过 Object.defineProperty 全部转为getter/setter, 被访问
    火修改时通知变化
 2，Vue不同在已创建的实例上添加新的根级响应式属性，可以添加响应属性到嵌套对象


趋低消费 趋优消费

模型简化：任何模型都是一种简化

Postcss:将项目中所有处理css的插件进行二次封装，基于Postcss平台
         独有的体系来完成一系列css文件处理








---------------------------old----------------------------

Vue初始化：配置数据观测， 编译模板， 挂载实例到DOM， 数据驱动DOM更新

v-html 被插入的html内容中数据绑定会被忽略

Vue只有在浏览器解析和标准化HTML，后才能获取模版内容
table, select， ul等限制标签，使用is来使用自定义组件

vue父子组件的关系： props down, events up

vue组件transclude(嵌套）, 子组件 属性、状态 正确方式



vue插件开发方式
   vue.mixin vue plugin开发
Vue.nextTick Dom更新之后的一些处理可放入其中
   vue-loader插件 转换 .vue 单文件组件

Vue 会递归将 data 的属性转换为 getter/setter

使用箭头函数：
   Vue.extend 中 不能对 data 属性函数：
   Vue.$watcher

Vue指令：
  参数、 修饰符、两指令缩写  .capture <--> ! 、 once <--> ~
  v-pre：  用于跳过没有指令的节点
  v-cloak: 保持在元素上直到关联实例结束编译

Vue 过滤器； Vue 函数化组件的使用方式

Vue render 函数接收一个 createElement 方法作为第一个参数用来创建 VNode
Vue 组件的 API 来自三部分： props, events 和 slots
    vueObj.$refs 只在组件渲染完成后才填充，并且它是非响应式的

<keep-alive> 包裹动态组件时，会缓存不活动的组件实例

vue plugins:
  数据交互 vue-resource  <--> axios
  methods 中 function 中 this 为vue对象

vue server renderer's style:  webpack + `vue-loader` + [vue-ssr-webpack-plugin]
vue-server-renderer 自动注入资源链接
html-webpack-plugin 比如注入字体等资源可能需要
   link preload  预加载

vue template compiler

Vuex:
  在组件中调用 store.dispatch 分发action
     mutation 必须同步执行
     action内容可处理任意异步
  在组件中调用 Vuex.Store.commit(type: string, payload?: any) 提交 mutation
     mapMutations 映射 组件methods 为 store.commit
  modules 会被合并到 store；状态使用 key 关联到 store 的根状态

  Vuex 将状态从根组件注入到每一个子组件中

  Moudles解决项目大store臃肿，自定义解决命名冲突问题

  strict模式中 双向绑定 obj.key 层级时问题

  getters store的计算属性 暴露为 `store.getters`  , mapGetters


PhantomJS: 基于为webkit，全面支持web
  服务器（非浏览器环境中）进行页面自动化任务
  page.valuate 由安全沙箱，仅返回一个简单的对象，不能获取页面脚本信息

daily-zhihu启动流程：



vue-router:
 全局钩子函数， 路由钩子函数， 组件钩子函数
nested-router

**lazy-loading


*** mongodb 创建的集合 使用时需要 name+s

db.[ users !important ].insert({userName:'cwwu', password:'123456'});


http://www.expressjs.com.cn/4x/api.html
app.all('*', filterFunc1, filterFunc2, ... )




db.col.update( {condition}, {$push:{obj}, $set:{field: value,  key.$.field:val } )
key.$.field 的使用，这里的$ 表示在查询条件里匹配上的数组元素的序数

db.col.aggregate( { $match:{}, $unwind:{}, $group:{key:{ $sum: key }}} )

indexs:
sparse index: 仅仅对某个字段（在集合某些列中，可能没有）建索引，不造成索引空间浪费，提高检索效率

MongoDB基于内存缓存的数据管理方式


db.inventory.insertMany([
   { item: "journal", qty: 25, tags: ["blank", "red"], size: { h: 14, w: 21, uom: "cm" } },
   { item: "mat", qty: 85, tags: ["gray"], size: { h: 27.9, w: 35.5, uom: "cm" } },
   { item: "mousepad", qty: 25, tags: ["gel", "blue"], size: { h: 19, w: 22.85, uom: "cm" } }
])


res.attachment()
http header field: content-disposition


db.col.update 不能有空值，否则报的错误： _id of undefined

nodejs模板引擎 数据替换语句 代码注释方式 与 <%# %> 共同使用

nodejs buffer 参数调整 --> formidable

部门路径没有跳转没报错？？
提交方式
路径层级



nodejs:
crypto.createHash().digest() 之后该hash对象被清空

net.Socket：
 可由require('net').connect() 返回值，创建于本地
 可通过 'connection' 事件参数传给客户端

http.createServer 与 net.createServer 区别：
 1, listenerCb 中 http.createServer(listenerfn(req, res){}), net.createServer(listenerfn(socket){})
 2, http通信建立在socket之上，同样，http.server继承于net.server
    *** net.createServer(callback) callback在nodejs内部实现中，也是监听connection事件的回调函数（一次性的事件监听）


可读写流Duplex Transform在内部维护了两个独立的缓存用于读与写

WritableStream：
'pipe' ： 输出到目标可写流（writable）的源流（source stream）
writable.cork()： 强制所有写入数据都压入内存中的缓冲区里
writable.uncork()  输出在 stream.cork() 方法被调用之后缓冲在内存中的所有数据

ReableStream:
 需要先为其提供消费或忽略数据的机制，才能开始提供数据

data事件与readable事件：
  触发时机与触发频率不同，回调函数参数不同

stream.Transform end 与 finish事件 区分：
  触发机制不同：stream.end() --> finish event emmit； stream.flush() --> end event emmit
  end 事件 一定会 发生在 finish事件之前


OA.getUploadImgUrl



https://github.com/hiloteam/hiloteam.github.io/tree/master/tutorial_src


zh-CN
https://developer.mozilla.org/zh-CN/docs/Web/API
AudioContext：

http://192.168.17.69:3001/testFiles/commonTest.html

pages 云贷项目pagecomponent
niiwoo 极速借项目pagecomponent








mongod.exe --bind_ip 127.0.0.1 --logpath "D:\mongodbData\log\mongodb.log" --logappend --dbpath "D:\mongodbData\data" --port 27017 --serviceName "MyServiceName" --serviceDisplayName "MyServiceName" --install

mongod.exe --dbpath D:\mongodbData\data

区分mongod 与 mongo 命令

git pull：refusing to merge unrelated histories
git pull origin master --allow-unrelated-histories

(use "git add <file>..." to update what will be committed)
(use "git checkout -- <file>..." to discard changes in working directory)


db.mongooses.find({"username" : "emtity_demo_username"})


threejs3D:
http://techbrood.com/threejs/docs/
1, 绘制threejs 3d 显示对象步骤
2，熟悉threejs 3d 建模工具使用
    http://www.flowers1225.com/lessons/2016/02/29/1






https://mp.weixin.qq.com/debug/wxadoc/dev/api/wxml-nodes-info.html#nodesreffieldsfieldscallback
小程序：
每一个页面的 [路径+页面名] 都需要写在 app.json 的 pages 中，且 pages 中的第一个页面是小程序的首页
<block /> 仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性
page.setData 实现上 是一次 evaluateJavascript 脚本过程
<cover-view />
   覆盖在原生组件之上的文本视图，可覆盖的原生组件包括map、video、canvas，支持嵌套
   支持事件机制，但事件不会冒泡到原生组件上
<label />  表单组件在label内；使用for标识表单组件



https://github.com/d3/d3/wiki/CN-Home
d3支持svg，xhtml，xlink的，xml和xmlns命名空间，其他命名空间可通过 d3.ns.prefix 注册
d3删除事件方式：selection.on(evttype, null);
d3工具类及函数返回大多数为 function object
d3.timer 定时触发函数的返回值决定是否继续执行， 默认返回false（false继续执行）
transition.each(type, func); type: start, end, interrupt, remove等; 如没有type, 则等同于 selection.each(func)
d3 object 与 原生 object 互转
d3地理投影绘制：1, datum(d3.geo.shape)  2, 绘制路径 attr('d', d3.geo.path)
轴：
 var xAxis = d3.svg.axis..scale( ruleScale.scale() )  轴组件.scale( 比例尺.scale() )
d3.time.format( format )
format：%a：星期， %b：月份， %e：天， %X：(时:分:秒)， %Y：年， 0%：百分比
设置比例尺轴的长度：
	1， 比例尺设置，scale.range(start, end);
	2,  设置轴每个刻度的间距 axis.tickPadding

拖选器构建：1，brush.x( scale ) 或者 brush.x(scale).y(scale)， 没有单独的 brush.y(scale)

弧生成器：d3.svg.arc， innerRadius:内弧, outerRadius:外狐
polygon 根据提供的points属性自动闭合

d3.time.format().parse(string) == [object Date]

d3.layout.force：
node的数量要大于link数量；
如果node数量少于link数量，则link应采用 link.attr('d', valus)绘制；

d3.layout.stack().out：    取得或设置用于存储基线的输出函数, 主要用于y轴基数输出函数
d3.layout.stack().values： 对比 直接使用d3.layout.stack(), 应用数据源的格式不同


css3 3D效果自动开启gpu加速（该浏览器支持）;使用3D 零变换来加速非3D动画
1，优先使用css动画    不占js主线程；可启动gpu加速；
2，适当使用canvas动画  可规避渲染树的计算渲染更快
3，合理使用requestAnimationFrame操作动画  能避免丢帧现象；支持中间状态监听

review：
1，布局理想视口 <meta content="width=device-width" >
   设备像素比 dpr（window.devicePixelRatio值）= 屏幕横向设备像素(分辨率的宽) / 理想视口的宽
    https://github.com/riskers/blog/issues/18

https://github.com/amfe/article/issues/17    taobao-flexible










changeSubMenu 左边新增加一个窗口的函数

niiwoo 现开发的主要界面文件夹

封阳葵


http://element-cn.eleme.io/#/zh-CN/component/dialog

http://192.168.18.14:81/html5/lixiong



PreCSS、
postcss api: http://api.postcss.org/AtRule.html#append

npm install --save-dev webpack@^2.2.1 -g















month：
合同审批增加合同子类型，附件下载；未打卡调整；转正审批bug修复




新：
固定资产模块中采购、个人申请、资产分配、验收、转移、回收等模块的交互、对接与测试
bothstrap适配方案研究借鉴；百度地图js api的学习；Hilo动画引擎的熟悉；d3数据可视化插件；

change：
请假，加班模块，会议预定，招聘模块，转正，聊聊，用章申请，报销，用车

待：
固定资产维修，固定资产回收，证件借调；借车模块；新出差模块


社交属性
vue nodejs hilo react
（时长3.1）
nodejs阿里云的部署：
  http://www.jianshu.com/p/0496ef49b2a5
1, 挂载数据盘




高位盘整放大量突破、先看成交量和放量比例、没有买盘的无量下跌
冲高出货、 公司有业绩支撑、XXX均线获得支撑
linux的几个版本：
CentOS, Red Hat, Ubuntu等

MACD: 短期与长期均线分离与聚合状况，换周K线尤为好用
      白线上穿黄线为金叉，白线下穿换线为死叉。
      金叉死叉再看多投排列还是空头排列，蓝线在黄线上还是蓝线在黄线之下，0线之下（副图）金叉不做多

首看周期，次看趋势，再看量能

VOL

KDJ（适合震荡行情，钝化时失效）: K次， D缓, J波动频繁
     D小于20，D大于80; KDJ底背离，KDJ顶背离;
     K上穿D金叉， K下穿D死叉;
     J连续0下方一旦回穿0， J连续100上方一旦回落100下方


当KDJ指标与K线图的走势呈现相反的趋势,代表行情可能即将出现反转的信号；
另当K线和D线的变化趋势突然减弱也是行情反转的预期信号
如果KDJ三者的值都位于50以上的话,则市场此时显示为多头市场,行情有上涨的趋势；
如果三者都位于50以下的话,则显示为空头市场,行情有下降的趋势.


周期共振：趋势的扭转都是小周期到大周期蔓延，周期共振，各周期的协调度
1、KDJ日、周、月线低位金叉——低位启动，坚决买进
2、KDJ日线金叉，周、月线高位运行——面临调整
3、KDJ日线金叉，周线KDJ向上，月线KDJ向下 -- 反弹行情
4、KDJ日线金叉，周线KDJ向下，月线KDJ向上——主力洗盘
5、KDJ日、周、月线高位运行———风险在即，KDJ的J值大于100，周线KDJ的J值大于90，月线KDJ的J大于80，风险就在眼前


研究一个指标，一定要从以下几个方面来看：高位、低位、多空平衡点、背离、周期共振等


趋势线：对非常陡峭的趋势线要持非常慎重的态度
布林线结合趋势线进一步确认阻力位和支撑位

基本分析：以企业内在价值作为研究对象，通过宏观经济形势、行业发展前景、企业经营状况等进行详尽分析
















"净资产与年末贷款余额比率", "资产负债率", "资本固定化比率", "流动比率", "速动比率", "利息保障倍数", "应收账款周转速度",
"存货周转速度",  "固定资产周转速度", "总资产周转率", "毛利率", "营业利润率", "净资产收益率", "总资产报酬率", "营业收入增长率", "营业利润增长率", "总资产增长率"


no data:
期末贷款余额
待处理流动资产损溢			--  非流动资产处置损失, 资产减值损失
利息支出				--  应付利息, 应收利息；开发支出， 营业外支出
税前利润， 税后利润			--  未分配利润， 营业利润， 净利润， 利润总额
期初应收账款余额原值			--  应收账款， 应付账款
期末应收账款余额原值    		--  应收账款， 应付账款

存货净额 				--  存货
主营业务成本				--  减：营业成本
期初存货+期末存货			--  存货
期初固定资产净值+期末固定资产净值 	-- 固定资产， 固定资产清理
期初总资产+期末总资产
期初总资产+期末总资产			-- 资产合计， 流动资产合计， 非流动资产合计

期初总资产余额+期末总资产余额



送转派配(送股，派现，配股) 复权除息
向前复权，派现使涨幅变大，配股使涨幅变小，送股不影响涨幅计算
向后复权，派现使涨幅变小，配股使涨幅变大，送股单独出现时不影响涨幅
股本应等于公司的注册资本，溢价发行、折价发行、面值发行

增量发行又分有偿无偿两种类型：有偿主要包括配股和向社会增发；无偿即为送股
名词含义：大小非、除权、除息
发行价(即溢价多少)：由发行人与承销的证券公司协商确定，报国务院证券监督管理机构核准


中国未来几年的货币政策继续极度宽松，继续大印钞
了解资本的来龙去脉与动向绝对百利而无一弊
大道至简，他可能不会说太多，但是一个简单的道理，有可能用3、5年来消化


很多阴阳线，因它所处的位置不同，其含义也就不同
阴阳线形态总是服从阴阳线排列、相对位置理论
将阴阳线形态分析与公司基本面分析、技术指标分析、成交量分析结合起来
确认性的标志性K线：1、大阳线和大阴线； 2、带长上影线的K线和带长下影线的K线（低开大阳线、高开大阴线）


P2P:
直接融资方
间接融资方
  银行业贷款的关键是分析资产负债表、财务状况、还款能力
  网贷是基于大数据贷款是根据借款人的行为数据自动算出违约概率

股票型基金：

  主题
型股票基金：
	主题的熟悉程度
  量化型股票基金：
	观察数据配合交易策略来自动化交易，非传统的基金经理研究企业、研究市场
  主动管理（行业轮动）型股票基金：
	股市热点是轮动的，优秀的基金经理如果能做到尽可能捕捉每一次上涨机会，自然会获得最高的绝对收益。
	因此该类基金持股灵活，调仓较多

债券基金二级分类方法：
  纯债型债券基金
  一级债券基金
  二级债券基金
  可转债债券基金

混合基金二级分类方法：偏股， 偏债， 平衡

指数基金二级分类方法：根据跟踪的指数进行分类（都属被动）

QDII基金二级分类方法：
公募基金：
私募基金：
基金规模越大，超越市场表现的难度犹大

首看周期，次看趋势，再看量能
央妈护盘的其中一重要目的也就是中国股市至今尚未改变——给国企融资。

沪深交易所对买盘和卖盘的揭示,指的是买价最高前三位揭示和卖价最低前三位揭示,是即时的买盘揭示和卖盘揭示,其成交后纳入成交量
（怎样看出成交量中哪些是以买成交或哪些是以卖成交？这里有一个办法：在目前股票电脑分析系统中有“外盘”和“内盘”的揭示,以卖方成交的纳入“外盘”,以买方成交的纳入“内盘”,这样就可以区分成交量哪些以买方成交、哪些以卖方成交）

高位并排阳线 之 缺口：
	高位并排形态表明价格或指数仍将上涨，其缺口将会成为今后一段时间价格或指数的支撑区域
双飞乌鸦：两次跳空高开，但阴跌收盘
个股筹码尤集中，主力拉抬股价阻力尤小


放任自流，不承担责任，只取自我所需  --  贪婪

股市就是为了融资发展经济，牛熊更迭就是为了促进消费，财富再分配，也是为了促进经济发展
牛市的基础不在股市，不看上市公司经营发展，而在于场外的资金多少










目前测试环境更新，暂不更新到正式环境中：
1，采购申请所加型号字段
2，会议预定增加预订人提示
3，用章申请 底部栏增加一行提示
4，用章流程调整



短期计划（）：
1，修改及新的任务
2，重新梳理完es6
3，使用Hilo做一两个小游戏


短期任务：
1，钉钉开放平台web研究 		https://open-doc.dingtalk.com/
   钉钉提供了安卓、IOS端的开发者版本安装包
2，腾讯企业邮箱免登等对接	https://exmail.qq.com/qy_mng_logic/doc#10036



报销，借款，合同，用章



OSX 的闭源网络栈
User-Agent 嗅探机制

图片缓存，预载缓存，服务工作进程，HTTP缓存，HTTP/2推送缓存
浏览器使用了HTTP2推送缓存，内容会被推送缓存删除，是否还缓存在HTTP缓存中，取决于缓存报头

https://github.com/d3/d3/wiki/%E9%80%89%E6%8B%A9%E5%99%A8#d3_selection  selection.data([values[, key]])








taken data:
Token=07fbfe4b-2621-4b6e-9066-3ff6409d6e3f
&UserId=3D2C7A2061B9770A83AE68E6958374A0
&AppUserId=yejianfa
&UserName=%E5%8F%B6%E5%81%A5%E5%8F%91
&UserPhoto=http://28f.bujidele.com:34181//Files/Api/Other/yejianfa/20160319101142.png
&SystemName=IOS
&Version=1.0.0
&ID=133648
&DeptID=72095798-541c-4f3d-a808-ac2622365b83
&DeptName=OA%E9%A1%B9%E7%9B%AE%E7%BB%84
&MsgType=(null)
&StaffNo=jt-2003



G:\program\public datum\产品\UI\APP_UI\PSD\000 UI效果图\2.0\常用流程\行政流程\固定资产







Zkh19851015




资产分配 在有附件的情况下  ，审批人员进入到详情页 看不到附件信息 userid：chentao id:143429

/* 回收、转移 type：1； 分配、申领 type：3 */
flex container：
  flex-direction
  flex-wrap
  flex-flow
  justify-content
  align-items
  align-content
flex item：
  order
  flex-grow
  flex-shrink
  flex-basis
  flex
  align-self

现有人数； 新增原因




http://121.13.249.210:34180/oa-h5/html/we-chat/post.html?Token=898b6dea-d4a7-4e55-9028-e8e1502099c9&AppUserId=yejianfa&StaffNo=E52EAE0BF71EAD36&UserName=%E5%8F%B6%E5%81%A5%E5%8F%91&UserId=3D2C7A2061B9770A83AE68E6958374A0&UserPhoto=http://28f.bujidele.com:34181//Files/Api/Other/yejianfa/20160319101142.png&SystemName=IOS&DeptName=OA%E9%A1%B9%E7%9B%AE%E7%BB%84&DeptID=72095798-541c-4f3d-a808-ac2622365b83&Version=1.0.0&rid=2262&cmtType=

